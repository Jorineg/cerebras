Computational region (inner PEs cover): 12x12 elements

Original Matrix:
[[3. 7. 9. 6. 5. 1. 8. 1. 9. 8. 0. 6. 4. 9.]
 [5. 5. 6. 1. 8. 6. 4. 8. 6. 6. 4. 1. 9. 7.]
 [2. 8. 1. 9. 5. 7. 2. 1. 0. 0. 3. 5. 7. 9.]
 [4. 2. 8. 6. 4. 4. 1. 7. 3. 2. 4. 6. 8. 5.]
 [1. 7. 1. 8. 1. 0. 5. 5. 9. 6. 6. 4. 8. 9.]
 [7. 9. 0. 4. 5. 0. 4. 3. 3. 7. 3. 2. 8. 9.]
 [5. 1. 4. 9. 1. [0. 9.] 2. 4. 6. 8. 3. 7. 5.]
 [1. 1. 0. 4. 3. 0. 5. 1. 5. 0. 5. 3. 2. 8.]
 [3. 9. 9. 5. 7. 9. 2. 6. 1. 1. 6. 2. 5. 4.]
 [4. 0. 9. 7. 5. 3. 4. 2. 5. 4. 4. 6. 0. 2.]
 [3. 7. 2. 7. 7. 9. 8. 0. 1. 9. 0. 1. 4. 0.]
 [4. 4. 5. 0. 4. 2. 6. 6. 2. 4. 9. 3. 9. 0.]
 [2. 7. 2. 8. 8. 1. 6. 4. 8. 9. 5. 5. 6. 1.]
 [1. 5. 3. 6. 4. 8. 6. 4. 3. 0. 1. 7. 0. 7.]]

Result Matrix (python computation):
[[3.  7.  9.  6.  5.  1.  8.  1.  9.  8.  0.  6.  4.  9. ]
 [5.  6.  4.7 5.2 5.5 5.3 5.3 4.7 5.8 5.  3.  4.3 6.2 7. ]
 [2.  4.3 5.5 5.2 6.3 5.2 2.8 3.2 1.7 1.8 3.2 4.5 7.5 9. ]
 [4.  5.2 4.3 6.8 4.  3.3 3.3 4.  4.  2.8 4.2 5.5 7.  5. ]
 [1.  4.5 4.2 4.7 3.2 1.7 3.3 5.7 5.8 6.  4.8 5.  7.5 9. ]
 [7.  5.5 3.  5.  2.7 1.5 4.2 3.3 4.8 5.3 4.8 3.7 7.  9. ]
 [5.  3.5 3.  5.2 3.2 [1.7 4.8] 3.5 4.  5.2 5.5 4.3 5.3 5. ]
 [1.  2.2 3.  4.2 3.  2.8 3.7 3.3 2.7 2.8 4.5 3.  4.5 8. ]
 [3.  5.2 6.8 6.2 6.  5.  4.7 3.  3.2 2.2 4.  4.  3.  4. ]
 [4.  4.8 6.  6.7 5.7 5.5 3.8 3.2 3.  4.5 4.  3.2 2.8 2. ]
 [3.  3.8 5.3 5.  6.5 6.3 5.8 2.8 3.  4.5 3.8 2.5 3.  0. ]
 [4.  5.2 3.  4.  4.2 4.  5.7 4.  3.8 6.2 5.  5.  5.2 0. ]
 [2.  4.5 4.5 5.3 5.5 4.3 4.8 5.3 5.7 5.8 5.7 5.2 4.5 1. ]
 [1.  5.  3.  6.  4.  8.  6.  4.  3.  0.  1.  7.  0.  7. ]]
copied weights to device
copied matrix to device
launched compute on device
copied buffer from device to host
copied result from device

Result Matrix (device computation):
[[3.  7.  9.  6.  5.  1.  8.  1.  9.  8.  0.  6.  4.  9. ]
 [5.  6.  4.7 5.2 5.5 5.3 5.3 4.7 5.8 5.  3.  4.3 6.2 7. ]
 [2.  4.3 5.5 5.2 6.3 5.2 2.8 3.2 1.7 1.8 3.2 4.5 7.5 9. ]
 [4.  5.2 4.3 6.8 4.  3.3 3.3 4.  4.  2.8 4.2 5.5 7.  5. ]
 [1.  4.5 4.2 4.7 3.2 1.7 3.3 5.7 5.8 6.  4.8 5.  7.5 9. ]
 [7.  5.5 3.  5.  2.7 1.5 4.2 3.3 4.8 5.3 4.8 3.7 7.  9. ]
 [5.  3.5 3.  5.2 3.2 [2.1 4.6] 3.5 4.  5.2 5.5 4.3 5.3 5. ]
 [1.  2.2 3.  4.2 3.  2.8 3.7 3.3 2.7 2.8 4.5 3.  4.5 8. ]
 [3.  5.2 6.8 6.2 6.  5.  4.7 3.  3.2 2.2 4.  4.  3.  4. ]
 [4.  4.8 6.  6.7 5.7 5.5 3.8 3.2 3.  4.5 4.  3.2 2.8 2. ]
 [3.  3.8 5.3 5.  6.5 6.3 5.8 2.8 3.  4.5 3.8 2.5 3.  0. ]
 [4.  5.2 3.  4.  4.2 4.  5.7 4.  3.8 6.2 5.  5.  5.2 0. ]
 [2.  4.5 4.5 5.3 5.5 4.3 4.8 5.3 5.7 5.8 5.7 5.2 4.5 1. ]
 [1.  5.  3.  6.  4.  8.  6.  4.  3.  0.  1.  7.  0.  7. ]]
Traceback (most recent call last):
  File "run.py", line 211, in <module>
    np.testing.assert_allclose(result, result_expected, atol=0.01, rtol=0)
  File "/python/python-x86_64/lib/python3.8/site-packages/numpy/testing/_private/utils.py", line 1592, in assert_allclose
    assert_array_compare(compare, actual, desired, err_msg=str(err_msg),
  File "/cb/toolchains/buildroot/monolith-default/202403181828-238-5e1418a5/rootfs-x86_64/usr/lib/python3.8/contextlib.py", line 75, in inner
    return func(*args, **kwds)
  File "/python/python-x86_64/lib/python3.8/site-packages/numpy/testing/_private/utils.py", line 862, in assert_array_compare
    raise AssertionError(msg)
AssertionError: 
Not equal to tolerance rtol=0, atol=0.01

Mismatched elements: 2 / 196 (1.02%)